webpackJsonp([2,0],[function(t,e,a){"use strict";function s(t){return t&&t.__esModule?t:{"default":t}}var i=a(54),o=s(i),r=a(49),n=s(r),c=a(52),u=s(c),l=a(53),p=s(l),d=a(9),f=s(d),m=a(50),h=s(m);o["default"].use(u["default"]),o["default"].use(p["default"]),o["default"].filter("concat",function(t){return t.length>40?t.substr(0,37)+"...":t});var v=new p["default"];v.map({"/about":{component:h["default"]},"/":{component:f["default"]}}),v.beforeEach(function(){window.scrollTo(0,0)}),v.redirect({"*":"/"}),v.start(n["default"],"#app")},,,,,,,,,function(t,e,a){var s,i;a(44),s=a(13),i=a(48),t.exports=s||{},t.exports.__esModule&&(t.exports=t.exports["default"]),i&&(("function"==typeof t.exports?t.exports.options||(t.exports.options={}):t.exports).template=i)},function(t,e,a){"use strict";function s(t){return t&&t.__esModule?t:{"default":t}}Object.defineProperty(e,"__esModule",{value:!0});var i=a(9);s(i);e["default"]={name:"app"},window.onload=function(){var t=document.getElementsByTagName("nav")[0];window.addEventListener("scroll",function(){document.documentElement.scrollTop||0==document.body.scrollTop?t.style.opacity=1:t.style.opacity=.8})}},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]={name:"app"}},function(t,e,a){"use strict";function s(t){return t&&t.__esModule?t:{"default":t}}Object.defineProperty(e,"__esModule",{value:!0});var i=a(14),o=s(i);e["default"]={name:"artist",props:{artist:Object},data:function(){return{wikiIntro:"",tracks:[],currentTrack:0,tracksReady:!1}},computed:{artistImage:function(){return this.artist.images[0]}},ready:function(){this.getWikiIntro(this.artist.name),this.getTopTracks(this.artist.id)},watch:{tracksReady:"masonry"},methods:{getWikiIntro:function(t){var e=this;this.$http.jsonp("https://en.wikipedia.org/w/api.php?action=query&format=json&prop=extracts&exintro=&explaintext=&titles="+this.artist.name).then(function(t){var a=(0,o["default"])(t.data.query.pages),s=t.data.query.pages[a].extract,i=s.length>100?s.substr(0,100)+"...":s;e.wikiIntro=i})},getTopTracks:function(t){var e=this;this.$http.get("https://api.spotify.com/v1/artists/"+t+"/top-tracks?country=US").then(function(t){e.tracks=t.data.tracks.slice(0,3),e.tracksReady=!0},function(t){console.log("Unable to get top tracks for artist: "+artist.name)})},masonry:function(){var t=imagesLoaded(document.querySelector(".container"));t.on("done",function(){new Masonry(".grid",{itemSelector:".artist-container"})})},setCurrentTrack:function(t){this.currentTrack=t}}}},function(t,e,a){"use strict";function s(t){return t&&t.__esModule?t:{"default":t}}Object.defineProperty(e,"__esModule",{value:!0});var i=a(51),o=s(i);e["default"]={name:"search",data:function(){return{artistID:null,artists:{},searchString:""}},components:{Artist:o["default"]},methods:{submit:function(t){var e=this;console.log(t),this.$http.get("https://api.spotify.com/v1/search?q="+t+"&type=artist&limit=5").then(function(t){void 0===t.data.artists.items[0]?console.log("no artists found"):(e.artistID=t.data.artists.items[0].id,e.findRelatedArtists(e.artistID))},function(t){console.log("unable to get artist")})},findRelatedArtists:function(t){var e=this;this.$http.get("https://api.spotify.com/v1/artists/"+t+"/related-artists").then(function(t){e.artists=t.data.artists})}}},window.onload=function(){var t=document.getElementsByTagName("nav")[0];window.addEventListener("scroll",function(){document.documentElement.scrollTop||0==document.body.scrollTop?(t.style.opacity=1,console.log("changed")):t.style.opacity=.8})}},,,,,,,,,,,,,,,,,,,,,,,,,,,,function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e){t.exports=" <div> <nav> <a href=#/ >Home</a> <a href=#/about>About</a> </nav> <div class=container> <h1 class=text-center> Similar Music </h1> <router-view class=view keep-alive transition transition-mode=out-in> </router-view> </div> </div> "},function(t,e){t.exports=" <div> <p class=about-header>Hi, I'm Joseph Campuzano!</p> <p class=about-text>I built this site webapp in order to learn Vue.JS. It utilizes both the Spotify Web API as well as the Wikipedia Web API. It uses <a href=http://getbootstrap.com/ >Bootstrap</a> (mostly for prototyping, its useful default styles, and containers) as well as <a href=http://fontawesome.io/ >font-awesome</a> for its awesome icons. It also uses the <a href=http://masonry.desandro.com/ >Masonry library</a> and the <a href=http://imagesloaded.desandro.com/ >imagesLoaded</a> plugin in order to create the layout. The initial scaffolding for the app was provided by <a href=https://github.com/vuejs/vue-cli>vue-cli</a></p> <p class=about-text>The source code for this site is available on <a href=https://github.com/jcampuza/vue-similar-music>Github</a></p> </div> "},function(t,e){t.exports=' <div class=artist-container> <div class=artist-image> <img :src=artist.images[0].url> </div> <div class=artist-social> <a target=_blank title="Search Youtube" :href="\'https://www.youtube.com/results?search_query=\' + artist.name"><i class="icon fa fa-youtube-square fa-2x"></i></a> <a target=_blank title="Find on Wikipedia" :href="\'https://en.wikipedia.org/wiki/\' + artist.name"><i class="icon fa fa-wikipedia-w fa-2x"></i></a> <a target=_blank title="View their subreddit" :href="\'https://www.reddit.com/r/\' + artist.name.split(\' \').join(\'\')"><i class="icon fa fa-reddit fa-2x"></i></a> <a target=_blank title="Find on Spotify" :href="\'https://open.spotify.com/artist/\' + artist.id"><i class="icon fa fa-spotify fa-2x"></i></a> </div> <div class=artist-info> <p class=artist-name> {{ artist.name }} <br><span class=artist-genre>{{ artist.genres[0] }}</span></p> <p class=artist-desc> {{ wikiIntro }}</p> </div> <div class=artist-player> <div class=now-playing v-if=tracksReady> <p>{{ tracks[currentTrack].name }} - {{ tracks[currentTrack].album.name }}</p> </div> <div class=now-playing v-if=!tracksReady> <p>Loading...</p> </div> <audio v-if=tracksReady controls :src=tracks[currentTrack].preview_url></audio> <div class=track-images> <img v-for="track in tracks" :src=track.album.images[1].url v-on:click=setCurrentTrack($index)> </div> </div> </div> '},function(t,e){t.exports=' <div> <form class="search-form center" v-on:submit.prevent=submit(searchString)> <input class=search-input type=text name=artistSearch v-model=searchString placeholder="Search for an artist/band"> <button type=button class=submit-button v-on:click=submit(searchString)><i class="fa fa-search"></i></button> </form> <div class=grid> <artist v-for="artist in artists" :artist=artist></artist> </div> </div> '},function(t,e,a){var s,i;a(41),s=a(10),i=a(45),t.exports=s||{},t.exports.__esModule&&(t.exports=t.exports["default"]),i&&(("function"==typeof t.exports?t.exports.options||(t.exports.options={}):t.exports).template=i)},function(t,e,a){var s,i;a(42),s=a(11),i=a(46),t.exports=s||{},t.exports.__esModule&&(t.exports=t.exports["default"]),i&&(("function"==typeof t.exports?t.exports.options||(t.exports.options={}):t.exports).template=i)},function(t,e,a){var s,i;a(43),s=a(12),i=a(47),t.exports=s||{},t.exports.__esModule&&(t.exports=t.exports["default"]),i&&(("function"==typeof t.exports?t.exports.options||(t.exports.options={}):t.exports).template=i)}]);
//# sourceMappingURL=app.1c015907e5f812d9c046.js.map