webpackJsonp([2,0],{0:function(t,a,i){"use strict";function s(t){return t&&t.__esModule?t:{"default":t}}var e=i(45),r=s(e),o=i(42),n=s(o),c=i(44),u=s(c);r["default"].use(u["default"]),new r["default"]({el:"body",components:{App:n["default"]}}),r["default"].filter("concat",function(t){return t.length>40?t.substr(0,37)+"...":t})},9:function(t,a,i){"use strict";function s(t){return t&&t.__esModule?t:{"default":t}}Object.defineProperty(a,"__esModule",{value:!0});var e=i(43),r=s(e);a["default"]={name:"app",data:function(){return{artistID:null,artists:{},searchString:""}},components:{Artist:r["default"]},computed:{},methods:{submit:function(t){var a=this;console.log(t),this.$http.get("https://api.spotify.com/v1/search?q="+t+"&type=artist&limit=5").then(function(t){void 0===t.data.artists.items[0]?console.log("no artists found"):(a.artistID=t.data.artists.items[0].id,console.log(a.artistID),a.findRelatedArtists(a.artistID))},function(t){console.log("unable to get artist")})},findRelatedArtists:function(t){var a=this;this.$http.get("https://api.spotify.com/v1/artists/"+t+"/related-artists").then(function(t){a.artists=t.data.artists,console.log(t)})}}},window.onload=function(){var t=document.getElementsByTagName("nav")[0];window.addEventListener("scroll",function(){document.documentElement.scrollTop||0==document.body.scrollTop?(t.style.opacity=1,console.log("changed")):t.style.opacity=.8})}},10:function(t,a,i){"use strict";function s(t){return t&&t.__esModule?t:{"default":t}}Object.defineProperty(a,"__esModule",{value:!0});var e=i(11),r=s(e);a["default"]={name:"artist",props:{artist:Object},data:function(){return{wikiIntro:"",tracks:[],currentTrack:0,tracksReady:!1}},computed:{artistImage:function(){return this.artist.images[0]}},ready:function(){this.getWikiIntro(this.artist.name),this.getTopTracks(this.artist.id)},methods:{getWikiIntro:function(t){var a=this;this.$http.jsonp("https://en.wikipedia.org/w/api.php?action=query&format=json&prop=extracts&exintro=&explaintext=&titles="+this.artist.name).then(function(t){var i=(0,r["default"])(t.data.query.pages),s=t.data.query.pages[i].extract,e=s.length>100?s.substr(0,100)+"...":s;a.wikiIntro=e})},getTopTracks:function(t){var a=this;this.$http.get("https://api.spotify.com/v1/artists/"+t+"/top-tracks?country=US").then(function(t){a.tracks=t.data.tracks.slice(0,3),a.tracksReady=!0},function(t){console.log("Unable to get top tracks for artist: "+artist.name)})}}}},38:function(t,a){},39:function(t,a){},40:function(t,a){t.exports=' <nav> <a href=#>Home</a> <a href=#>About</a> </nav> <div id=app> <div class=container> <h1 class=text-center> Similar Music </h1> <form class="search-form center"> <input class=search-input type=text name=artistSearch v-model=searchString placeholder="Search for an artist/band"> <button type=button class=submit-button v-on:click=submit(searchString)>Submit</button> </form> <div class="row grid"> <artist v-for="artist in artists" :artist=artist></artist> </div> </div> </div> '},41:function(t,a){t.exports=' <div class=artist-container> <div class=artist-image> <img :src=artist.images[0].url> </div> <div class=artist-social> <a target=_blank title="Search Youtube" :href="\'https://www.youtube.com/results?search_query=\' + artist.name"><i class="icon fa fa-youtube-square fa-2x"></i></a> <a target=_blank title="Find on Wikipedia" :href="\'https://en.wikipedia.org/wiki/\' + artist.name"><i class="icon fa fa-wikipedia-w fa-2x"></i></a> <a target=_blank title="View their subreddit" :href="\'https://www.reddit.com/r/\' + artist.name"><i class="icon fa fa-reddit fa-2x"></i></a> <a target=_blank title="Find on Spotify" :href="\'https://open.spotify.com/artist/\' + artist.id"><i class="icon fa fa-spotify fa-2x"></i></a> </div> <div class=artist-info> <p class=artist-name> {{ artist.name }}</p> <p class=artist-desc> {{ wikiIntro }}</p> </div> <div class=artist-player> <div class=now-playing v-if=tracksReady> <p>{{ tracks[currentTrack].name }}</p> <p>{{ tracks[currentTrack].album.name}}</p> </div> <div class=now-playing v-if=!tracksReady> <p>Loading...</p> </div> <audio v-if=tracksReady controls :src=tracks[currentTrack].preview_url></audio> <div class=track-images> <img v-for="track in tracks" :src=track.album.images[1].url> </div> </div> </div> '},42:function(t,a,i){var s,e;i(38),s=i(9),e=i(40),t.exports=s||{},t.exports.__esModule&&(t.exports=t.exports["default"]),e&&(("function"==typeof t.exports?t.exports.options||(t.exports.options={}):t.exports).template=e)},43:function(t,a,i){var s,e;i(39),s=i(10),e=i(41),t.exports=s||{},t.exports.__esModule&&(t.exports=t.exports["default"]),e&&(("function"==typeof t.exports?t.exports.options||(t.exports.options={}):t.exports).template=e)}});
//# sourceMappingURL=app.4df755b543ae8c52bf2c.js.map